#ifndef ALGINE_KEYBOARDKEYCONVERTER_H
#define ALGINE_KEYBOARDKEYCONVERTER_H

#include <algine/core/input/KeyboardKey.h>

#include <GLFW/glfw3.h>

/*
 * Macros have been generated by KeyboardKeyConverterGen.py
 * Do not edit!
 */

namespace algine {
#define glfwToInternal(key, glfwKey) if (value == glfwKey) return KeyboardKey::key

inline KeyboardKey getKeyboardKey(uint value) {
    glfwToInternal(Unknown, GLFW_KEY_UNKNOWN);
    glfwToInternal(Space, GLFW_KEY_SPACE);
    glfwToInternal(Apostrophe, GLFW_KEY_APOSTROPHE);
    glfwToInternal(Comma, GLFW_KEY_COMMA);
    glfwToInternal(Minus, GLFW_KEY_MINUS);
    glfwToInternal(Dot, GLFW_KEY_PERIOD);
    glfwToInternal(Slash, GLFW_KEY_SLASH);
    glfwToInternal(Key0, GLFW_KEY_0);
    glfwToInternal(Key1, GLFW_KEY_1);
    glfwToInternal(Key2, GLFW_KEY_2);
    glfwToInternal(Key3, GLFW_KEY_3);
    glfwToInternal(Key4, GLFW_KEY_4);
    glfwToInternal(Key5, GLFW_KEY_5);
    glfwToInternal(Key6, GLFW_KEY_6);
    glfwToInternal(Key7, GLFW_KEY_7);
    glfwToInternal(Key8, GLFW_KEY_8);
    glfwToInternal(Key9, GLFW_KEY_9);
    glfwToInternal(Semicolon, GLFW_KEY_SEMICOLON);
    glfwToInternal(Equal, GLFW_KEY_EQUAL);
    glfwToInternal(A, GLFW_KEY_A);
    glfwToInternal(B, GLFW_KEY_B);
    glfwToInternal(C, GLFW_KEY_C);
    glfwToInternal(D, GLFW_KEY_D);
    glfwToInternal(E, GLFW_KEY_E);
    glfwToInternal(F, GLFW_KEY_F);
    glfwToInternal(G, GLFW_KEY_G);
    glfwToInternal(H, GLFW_KEY_H);
    glfwToInternal(I, GLFW_KEY_I);
    glfwToInternal(J, GLFW_KEY_J);
    glfwToInternal(K, GLFW_KEY_K);
    glfwToInternal(L, GLFW_KEY_L);
    glfwToInternal(M, GLFW_KEY_M);
    glfwToInternal(N, GLFW_KEY_N);
    glfwToInternal(O, GLFW_KEY_O);
    glfwToInternal(P, GLFW_KEY_P);
    glfwToInternal(Q, GLFW_KEY_Q);
    glfwToInternal(R, GLFW_KEY_R);
    glfwToInternal(S, GLFW_KEY_S);
    glfwToInternal(T, GLFW_KEY_T);
    glfwToInternal(U, GLFW_KEY_U);
    glfwToInternal(V, GLFW_KEY_V);
    glfwToInternal(W, GLFW_KEY_W);
    glfwToInternal(X, GLFW_KEY_X);
    glfwToInternal(Y, GLFW_KEY_Y);
    glfwToInternal(Z, GLFW_KEY_Z);
    glfwToInternal(LeftBracket, GLFW_KEY_LEFT_BRACKET);
    glfwToInternal(Backslash, GLFW_KEY_BACKSLASH);
    glfwToInternal(RightBracket, GLFW_KEY_RIGHT_BRACKET);
    glfwToInternal(GraveAccent, GLFW_KEY_GRAVE_ACCENT);
    glfwToInternal(World1, GLFW_KEY_WORLD_1);
    glfwToInternal(World2, GLFW_KEY_WORLD_2);
    glfwToInternal(Escape, GLFW_KEY_ESCAPE);
    glfwToInternal(Enter, GLFW_KEY_ENTER);
    glfwToInternal(Tab, GLFW_KEY_TAB);
    glfwToInternal(Backspace, GLFW_KEY_BACKSPACE);
    glfwToInternal(Insert, GLFW_KEY_INSERT);
    glfwToInternal(Delete, GLFW_KEY_DELETE);
    glfwToInternal(Right, GLFW_KEY_RIGHT);
    glfwToInternal(Left, GLFW_KEY_LEFT);
    glfwToInternal(Down, GLFW_KEY_DOWN);
    glfwToInternal(Up, GLFW_KEY_UP);
    glfwToInternal(PageUp, GLFW_KEY_PAGE_UP);
    glfwToInternal(PageDown, GLFW_KEY_PAGE_DOWN);
    glfwToInternal(Home, GLFW_KEY_HOME);
    glfwToInternal(End, GLFW_KEY_END);
    glfwToInternal(CapsLock, GLFW_KEY_CAPS_LOCK);
    glfwToInternal(ScrollLock, GLFW_KEY_SCROLL_LOCK);
    glfwToInternal(NumLock, GLFW_KEY_NUM_LOCK);
    glfwToInternal(PrintScreen, GLFW_KEY_PRINT_SCREEN);
    glfwToInternal(Pause, GLFW_KEY_PAUSE);
    glfwToInternal(F1, GLFW_KEY_F1);
    glfwToInternal(F2, GLFW_KEY_F2);
    glfwToInternal(F3, GLFW_KEY_F3);
    glfwToInternal(F4, GLFW_KEY_F4);
    glfwToInternal(F5, GLFW_KEY_F5);
    glfwToInternal(F6, GLFW_KEY_F6);
    glfwToInternal(F7, GLFW_KEY_F7);
    glfwToInternal(F8, GLFW_KEY_F8);
    glfwToInternal(F9, GLFW_KEY_F9);
    glfwToInternal(F10, GLFW_KEY_F10);
    glfwToInternal(F11, GLFW_KEY_F11);
    glfwToInternal(F12, GLFW_KEY_F12);
    glfwToInternal(F13, GLFW_KEY_F13);
    glfwToInternal(F14, GLFW_KEY_F14);
    glfwToInternal(F15, GLFW_KEY_F15);
    glfwToInternal(F16, GLFW_KEY_F16);
    glfwToInternal(F17, GLFW_KEY_F17);
    glfwToInternal(F18, GLFW_KEY_F18);
    glfwToInternal(F19, GLFW_KEY_F19);
    glfwToInternal(F20, GLFW_KEY_F20);
    glfwToInternal(F21, GLFW_KEY_F21);
    glfwToInternal(F22, GLFW_KEY_F22);
    glfwToInternal(F23, GLFW_KEY_F23);
    glfwToInternal(F24, GLFW_KEY_F24);
    glfwToInternal(F25, GLFW_KEY_F25);
    glfwToInternal(KeyPad0, GLFW_KEY_KP_0);
    glfwToInternal(KeyPad1, GLFW_KEY_KP_1);
    glfwToInternal(KeyPad2, GLFW_KEY_KP_2);
    glfwToInternal(KeyPad3, GLFW_KEY_KP_3);
    glfwToInternal(KeyPad4, GLFW_KEY_KP_4);
    glfwToInternal(KeyPad5, GLFW_KEY_KP_5);
    glfwToInternal(KeyPad6, GLFW_KEY_KP_6);
    glfwToInternal(KeyPad7, GLFW_KEY_KP_7);
    glfwToInternal(KeyPad8, GLFW_KEY_KP_8);
    glfwToInternal(KeyPad9, GLFW_KEY_KP_9);
    glfwToInternal(KeyPadDecimal, GLFW_KEY_KP_DECIMAL);
    glfwToInternal(KeyPadDivide, GLFW_KEY_KP_DIVIDE);
    glfwToInternal(KeyPadMultiply, GLFW_KEY_KP_MULTIPLY);
    glfwToInternal(KeyPadSubtract, GLFW_KEY_KP_SUBTRACT);
    glfwToInternal(KeyPadAdd, GLFW_KEY_KP_ADD);
    glfwToInternal(KeyPadEnter, GLFW_KEY_KP_ENTER);
    glfwToInternal(KeyPadEqual, GLFW_KEY_KP_EQUAL);
    glfwToInternal(LeftShift, GLFW_KEY_LEFT_SHIFT);
    glfwToInternal(LeftControl, GLFW_KEY_LEFT_CONTROL);
    glfwToInternal(LeftAlt, GLFW_KEY_LEFT_ALT);
    glfwToInternal(LeftSuper, GLFW_KEY_LEFT_SUPER);
    glfwToInternal(RightShift, GLFW_KEY_RIGHT_SHIFT);
    glfwToInternal(RightControl, GLFW_KEY_RIGHT_CONTROL);
    glfwToInternal(RightAlt, GLFW_KEY_RIGHT_ALT);
    glfwToInternal(RightSuper, GLFW_KEY_RIGHT_SUPER);
    glfwToInternal(Menu, GLFW_KEY_MENU);

    return KeyboardKey::Unknown;
}

#undef glfwToInternal

#define internalToGlfw(key, glfwValue) if (value == KeyboardKey::key) return glfwValue

inline uint getGLFWKeyValue(KeyboardKey value) {
    internalToGlfw(Unknown, GLFW_KEY_UNKNOWN);
    internalToGlfw(Space, GLFW_KEY_SPACE);
    internalToGlfw(Apostrophe, GLFW_KEY_APOSTROPHE);
    internalToGlfw(Comma, GLFW_KEY_COMMA);
    internalToGlfw(Minus, GLFW_KEY_MINUS);
    internalToGlfw(Dot, GLFW_KEY_PERIOD);
    internalToGlfw(Slash, GLFW_KEY_SLASH);
    internalToGlfw(Key0, GLFW_KEY_0);
    internalToGlfw(Key1, GLFW_KEY_1);
    internalToGlfw(Key2, GLFW_KEY_2);
    internalToGlfw(Key3, GLFW_KEY_3);
    internalToGlfw(Key4, GLFW_KEY_4);
    internalToGlfw(Key5, GLFW_KEY_5);
    internalToGlfw(Key6, GLFW_KEY_6);
    internalToGlfw(Key7, GLFW_KEY_7);
    internalToGlfw(Key8, GLFW_KEY_8);
    internalToGlfw(Key9, GLFW_KEY_9);
    internalToGlfw(Semicolon, GLFW_KEY_SEMICOLON);
    internalToGlfw(Equal, GLFW_KEY_EQUAL);
    internalToGlfw(A, GLFW_KEY_A);
    internalToGlfw(B, GLFW_KEY_B);
    internalToGlfw(C, GLFW_KEY_C);
    internalToGlfw(D, GLFW_KEY_D);
    internalToGlfw(E, GLFW_KEY_E);
    internalToGlfw(F, GLFW_KEY_F);
    internalToGlfw(G, GLFW_KEY_G);
    internalToGlfw(H, GLFW_KEY_H);
    internalToGlfw(I, GLFW_KEY_I);
    internalToGlfw(J, GLFW_KEY_J);
    internalToGlfw(K, GLFW_KEY_K);
    internalToGlfw(L, GLFW_KEY_L);
    internalToGlfw(M, GLFW_KEY_M);
    internalToGlfw(N, GLFW_KEY_N);
    internalToGlfw(O, GLFW_KEY_O);
    internalToGlfw(P, GLFW_KEY_P);
    internalToGlfw(Q, GLFW_KEY_Q);
    internalToGlfw(R, GLFW_KEY_R);
    internalToGlfw(S, GLFW_KEY_S);
    internalToGlfw(T, GLFW_KEY_T);
    internalToGlfw(U, GLFW_KEY_U);
    internalToGlfw(V, GLFW_KEY_V);
    internalToGlfw(W, GLFW_KEY_W);
    internalToGlfw(X, GLFW_KEY_X);
    internalToGlfw(Y, GLFW_KEY_Y);
    internalToGlfw(Z, GLFW_KEY_Z);
    internalToGlfw(LeftBracket, GLFW_KEY_LEFT_BRACKET);
    internalToGlfw(Backslash, GLFW_KEY_BACKSLASH);
    internalToGlfw(RightBracket, GLFW_KEY_RIGHT_BRACKET);
    internalToGlfw(GraveAccent, GLFW_KEY_GRAVE_ACCENT);
    internalToGlfw(World1, GLFW_KEY_WORLD_1);
    internalToGlfw(World2, GLFW_KEY_WORLD_2);
    internalToGlfw(Escape, GLFW_KEY_ESCAPE);
    internalToGlfw(Enter, GLFW_KEY_ENTER);
    internalToGlfw(Tab, GLFW_KEY_TAB);
    internalToGlfw(Backspace, GLFW_KEY_BACKSPACE);
    internalToGlfw(Insert, GLFW_KEY_INSERT);
    internalToGlfw(Delete, GLFW_KEY_DELETE);
    internalToGlfw(Right, GLFW_KEY_RIGHT);
    internalToGlfw(Left, GLFW_KEY_LEFT);
    internalToGlfw(Down, GLFW_KEY_DOWN);
    internalToGlfw(Up, GLFW_KEY_UP);
    internalToGlfw(PageUp, GLFW_KEY_PAGE_UP);
    internalToGlfw(PageDown, GLFW_KEY_PAGE_DOWN);
    internalToGlfw(Home, GLFW_KEY_HOME);
    internalToGlfw(End, GLFW_KEY_END);
    internalToGlfw(CapsLock, GLFW_KEY_CAPS_LOCK);
    internalToGlfw(ScrollLock, GLFW_KEY_SCROLL_LOCK);
    internalToGlfw(NumLock, GLFW_KEY_NUM_LOCK);
    internalToGlfw(PrintScreen, GLFW_KEY_PRINT_SCREEN);
    internalToGlfw(Pause, GLFW_KEY_PAUSE);
    internalToGlfw(F1, GLFW_KEY_F1);
    internalToGlfw(F2, GLFW_KEY_F2);
    internalToGlfw(F3, GLFW_KEY_F3);
    internalToGlfw(F4, GLFW_KEY_F4);
    internalToGlfw(F5, GLFW_KEY_F5);
    internalToGlfw(F6, GLFW_KEY_F6);
    internalToGlfw(F7, GLFW_KEY_F7);
    internalToGlfw(F8, GLFW_KEY_F8);
    internalToGlfw(F9, GLFW_KEY_F9);
    internalToGlfw(F10, GLFW_KEY_F10);
    internalToGlfw(F11, GLFW_KEY_F11);
    internalToGlfw(F12, GLFW_KEY_F12);
    internalToGlfw(F13, GLFW_KEY_F13);
    internalToGlfw(F14, GLFW_KEY_F14);
    internalToGlfw(F15, GLFW_KEY_F15);
    internalToGlfw(F16, GLFW_KEY_F16);
    internalToGlfw(F17, GLFW_KEY_F17);
    internalToGlfw(F18, GLFW_KEY_F18);
    internalToGlfw(F19, GLFW_KEY_F19);
    internalToGlfw(F20, GLFW_KEY_F20);
    internalToGlfw(F21, GLFW_KEY_F21);
    internalToGlfw(F22, GLFW_KEY_F22);
    internalToGlfw(F23, GLFW_KEY_F23);
    internalToGlfw(F24, GLFW_KEY_F24);
    internalToGlfw(F25, GLFW_KEY_F25);
    internalToGlfw(KeyPad0, GLFW_KEY_KP_0);
    internalToGlfw(KeyPad1, GLFW_KEY_KP_1);
    internalToGlfw(KeyPad2, GLFW_KEY_KP_2);
    internalToGlfw(KeyPad3, GLFW_KEY_KP_3);
    internalToGlfw(KeyPad4, GLFW_KEY_KP_4);
    internalToGlfw(KeyPad5, GLFW_KEY_KP_5);
    internalToGlfw(KeyPad6, GLFW_KEY_KP_6);
    internalToGlfw(KeyPad7, GLFW_KEY_KP_7);
    internalToGlfw(KeyPad8, GLFW_KEY_KP_8);
    internalToGlfw(KeyPad9, GLFW_KEY_KP_9);
    internalToGlfw(KeyPadDecimal, GLFW_KEY_KP_DECIMAL);
    internalToGlfw(KeyPadDivide, GLFW_KEY_KP_DIVIDE);
    internalToGlfw(KeyPadMultiply, GLFW_KEY_KP_MULTIPLY);
    internalToGlfw(KeyPadSubtract, GLFW_KEY_KP_SUBTRACT);
    internalToGlfw(KeyPadAdd, GLFW_KEY_KP_ADD);
    internalToGlfw(KeyPadEnter, GLFW_KEY_KP_ENTER);
    internalToGlfw(KeyPadEqual, GLFW_KEY_KP_EQUAL);
    internalToGlfw(LeftShift, GLFW_KEY_LEFT_SHIFT);
    internalToGlfw(LeftControl, GLFW_KEY_LEFT_CONTROL);
    internalToGlfw(LeftAlt, GLFW_KEY_LEFT_ALT);
    internalToGlfw(LeftSuper, GLFW_KEY_LEFT_SUPER);
    internalToGlfw(RightShift, GLFW_KEY_RIGHT_SHIFT);
    internalToGlfw(RightControl, GLFW_KEY_RIGHT_CONTROL);
    internalToGlfw(RightAlt, GLFW_KEY_RIGHT_ALT);
    internalToGlfw(RightSuper, GLFW_KEY_RIGHT_SUPER);
    internalToGlfw(Menu, GLFW_KEY_MENU);

    return GLFW_KEY_UNKNOWN;
}

#undef internalToGlfw
}

#endif //ALGINE_KEYBOARDKEYCONVERTER_H
